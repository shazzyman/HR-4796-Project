import numpy as npimport mathimport matplotlib.pyplot as pltfrom astropy.coordinates import Anglefrom photutils.aperture import RectangularAperture, ApertureStatsfrom astropy.stats import sigma_clipped_statsfrom photutils.aperture import aperture_photometry#from ShazaliForwardModel import data#from ShazaliForwardModel import L_miepltimport disk_parameters as dpar#import ShazaliForwardModel as ShazModpixsc = 1. / (dpar.px_size * dpar.dsun)arc_to_px = 1. / dpar.px_sizedef square_aperture_calcs(data, w, h, x, y):        position = (x,y)        aperture= RectangularAperture(position, w, h)                phot_tables= aperture_photometry(data, aperture)        phot_tables['aperture_sum'].info.format = '%.8g'        #print(phot_tables['aperture_sum'])                _, medians, _ = sigma_clipped_stats(data, sigma=3.0)        aperstats = ApertureStats(data, aperture)        medians = aperstats.median            print('Median flux of Aperture:', aperstats.median)                return(aperture, phot_tables, medians)    # spec_wl_data = data[0] #Input wavelength of interest# # w =  0.1523 * arc_to_px #STIS aperture size ["]w = 0.2262 * arc_to_px #NICMOS aperture size ["]# # w = 0.111 * arc_to_px #Clio-2 aperture size ["]h = wx = 82.5 + (dpar.rmin + dpar.rmax) * pixsc / 2 * np.sin( 206.8 * np.pi / 180) #xvalue of positiony = 82.5 + (dpar.rmin + dpar.rmax) * pixsc / 2 * np.cos( 206.8 * np.pi / 180) #yvalue of position# aperture, phot_table, median = square_aperture_calcs(spec_wl_data, w, h, x, y)# data -= median# ldp_agl_rotated = ShazMod.ldp_agl_rotated# colors = ShazMod.colors# lx = ShazMod.lx# ly = ShazMod.ly# print('Median flux of Aperture:', median)# fig4 = plt.figure(figsize=(8,6), dpi=200)# ax = fig4.add_subplot(1, 1, 1)# x = ldp_agl_rotated[:, :, 0]# L_mieplt = ax.imshow(10000*ldp_agl_rotated[:, :, 0], norm=colors.PowerNorm(gamma=1./4.), cmap=plt.cm.get_cmap('inferno'),)# #L_mieplt = ax.pcolormesh(lx,ly,10000*ldp_agl_rotated[:, :, 76], norm=colors.PowerNorm(gamma=1./4.), cmap=plt.cm.get_cmap('inferno'), extent=(-1*np.max(lx)/2, np.max(lx)/2, -1*np.max(ly)/2, np.max(ly)/2))# ax.plot([0],[0], marker="*", color='y')# cbar = fig4.colorbar(L_mieplt)# cbar.ax.set_ylabel('F$_{disk}$ / F$_*$ x $10^5$')# coords = [0, 0]# aperture.plot(axes=ax, color='white', lw=1.5, alpha=0.5)# plt.show()